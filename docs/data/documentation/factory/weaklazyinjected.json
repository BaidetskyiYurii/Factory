{"metadata":{"role":"symbol","symbolKind":"struct","title":"WeakLazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"modules":[{"name":"Factory"}],"roleHeading":"Structure","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"externalID":"s:7Factory16WeakLazyInjectedV"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3"]},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolvedOrNil()"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This wrapper maintains a weak reference to the object in question, so it must exist elsewhere.t","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"It’s useful for delegate patterns and parent\/child relationships."}]},{"inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"text":" ","type":"text"},{"type":"text","text":"EnvironmentObject in SwiftUI."}],"type":"paragraph"},{"code":["class MyViewModel {","   @LazyInjected(\\.myService) var service","   @LazyInjected(\\MyCustomContainer.myService) var service","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"code":"shared","type":"codeVoice"},{"text":" container required for each Container type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance on your own customer container type."}],"type":"paragraph"},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lazy injection is resolved the first time the dependency is referenced by the code, "},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" on initialization."}]}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/weaklazyinjected"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","references":{"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-75hq3":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3","role":"symbol","title":"init(_:)","abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">>)","kind":"text"}],"url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/resolvedOrNil()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolvedOrNil()","role":"symbol","title":"resolvedOrNil()","abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"kind":"text","text":"() -> "},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/factory\/weaklazyinjected\/resolvedornil()","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/resolve(reset:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)","role":"symbol","title":"resolve(reset:)","abstract":[{"text":"Allows the user to force a Factory resolution at their discretion.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"resolve","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"reset"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"url":"\/documentation\/factory\/weaklazyinjected\/resolve(reset:)","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/wrappedValue":{"url":"\/documentation\/factory\/weaklazyinjected\/wrappedvalue","kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue","type":"topic","abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-4r0lx":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx","title":"init(_:)","role":"symbol","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:7Factory9ContainerC"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>)"}],"url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-4r0lx"},"doc://Factory/documentation/Factory/WeakLazyInjected":{"url":"\/documentation\/factory\/weaklazyinjected","kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","type":"topic","abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WeakLazyInjected","kind":"identifier"}]},"doc://Factory/documentation/Factory/WeakLazyInjected/factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","role":"symbol","title":"factory","abstract":[{"type":"text","text":"Grants access to the internal Factory."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"factory"},{"text":": ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/factory\/weaklazyinjected\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/projectedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","role":"symbol","title":"projectedValue","abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory16WeakLazyInjectedV","text":"WeakLazyInjected"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factory\/weaklazyinjected\/projectedvalue","type":"topic","kind":"symbol"}}}