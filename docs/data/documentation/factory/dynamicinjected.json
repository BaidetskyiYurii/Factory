{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicInjected"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"text":" ","type":"text"},{"text":"EnvironmentObject in SwiftUI.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"]},{"type":"paragraph","inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"type":"codeVoice","code":"shared"},{"text":" container required for each Container type.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"text":"allows you to point an instance of your own custom container type.","type":"text"}]},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"type":"strong","inlineContent":[{"type":"text","text":"access"}]},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"properties are accessed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"type":"text","text":"then it probably needs to be cached using one of Factory’s caching mechanisms."}]},{"code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/dynamicinjected"]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"symbolKind":"struct","title":"DynamicInjected","navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"externalID":"s:7Factory15DynamicInjectedV","roleHeading":"Structure","modules":[{"name":"Factory"}]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue"]}],"sections":[],"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"references":{"doc://Factory/documentation/Factory/DynamicInjected/projectedValue":{"title":"projectedValue","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"url":"\/documentation\/factory\/dynamicinjected\/projectedvalue","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/wrappedValue":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"abstract":[{"text":"Manages the wrapped dependency.","type":"text"}],"kind":"symbol","title":"wrappedValue","url":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue","type":"topic"},"doc://Factory/documentation/Factory/DynamicInjected":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicInjected"}],"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","kind":"symbol","type":"topic","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"title":"DynamicInjected","role":"symbol","url":"\/documentation\/factory\/dynamicinjected"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-2f6gs":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"url":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"title":"init(_:)"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-3wi25":{"role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:7Factory9ContainerC","text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">>)","kind":"text"}],"type":"topic","kind":"symbol","title":"init(_:)"}}}