{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>) "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"text":"C","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","kind":"typeIdentifier","text":"SharedContainer","preciseIdentifier":"s:7Factory15SharedContainerP"}],"languages":["swift"]}]},{"parameters":[{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"KeyPath to a Factory on the specified Container."}]}]}],"kind":"parameters"}],"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"roleHeading":"Initializer","role":"symbol","modules":[{"name":"Factory"}],"title":"init(_:)","externalID":"s:7Factory16WeakLazyInjectedVyACyxGs7KeyPathCyqd__A2AVyxGGcAA15SharedContainerRd__lufc","symbolKind":"init"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected"]]},"abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"variants":[{"paths":["\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory/SharedContainer":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/sharedcontainer","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/WeakLazyInjected":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/weaklazyinjected","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WeakLazyInjected"}]},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-75hq3":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3","title":"init(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}]},"doc://Factory/documentation/Factory/Factory":{"role":"symbol","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factory\/factory","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}],"title":"Factory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory"}}}