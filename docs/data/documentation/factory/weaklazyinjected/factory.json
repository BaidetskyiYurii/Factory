{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"title":"factory","symbolKind":"property","externalID":"s:7Factory16WeakLazyInjectedV7factoryA2AVyxGvp","roleHeading":"Instance Property","modules":[{"name":"Factory"}]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/factory\/weaklazyinjected\/factory"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected"]]},"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Factory/documentation/Factory/Factory":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","title":"Factory","url":"\/documentation\/factory\/factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected":{"url":"\/documentation\/factory\/weaklazyinjected","kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","type":"topic","abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WeakLazyInjected","kind":"identifier"}]},"doc://Factory/documentation/Factory/WeakLazyInjected/factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","role":"symbol","title":"factory","abstract":[{"type":"text","text":"Grants access to the internal Factory."}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"factory"},{"text":": ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/factory\/weaklazyinjected\/factory","type":"topic","kind":"symbol"}}}