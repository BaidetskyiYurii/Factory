{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"kind":"text","text":": "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","kind":"typeIdentifier","text":"WeakLazyInjected","preciseIdentifier":"s:7Factory16WeakLazyInjectedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected"]]},"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","interfaceLanguage":"swift"},"metadata":{"symbolKind":"property","title":"projectedValue","externalID":"s:7Factory16WeakLazyInjectedV14projectedValueACyxGvp","modules":[{"name":"Factory"}],"roleHeading":"Instance Property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory16WeakLazyInjectedV","text":"WeakLazyInjected","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/weaklazyinjected\/projectedvalue"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Factory/documentation/Factory/WeakLazyInjected/projectedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","role":"symbol","title":"projectedValue","abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory16WeakLazyInjectedV","text":"WeakLazyInjected"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factory\/weaklazyinjected\/projectedvalue","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected":{"url":"\/documentation\/factory\/weaklazyinjected","kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","type":"topic","abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"WeakLazyInjected","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"}}}