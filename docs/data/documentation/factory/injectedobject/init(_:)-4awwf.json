{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/InjectedObject"]]},"metadata":{"externalID":"s:7Factory14InjectedObjectVyACyxGxcfc","role":"symbol","platforms":[{"name":"iOS","introducedAt":"14.0","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"beta":false,"name":"macOS","unavailable":false,"introducedAt":"11.0"},{"deprecated":false,"name":"tvOS","unavailable":false,"beta":false,"introducedAt":"14.0"},{"unavailable":false,"name":"watchOS","beta":false,"introducedAt":"7.0","deprecated":false}],"roleHeading":"Initializer","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"extendedModule":"Factory","modules":[{"name":"Factory"}],"symbolKind":"init","title":"init(_:)"},"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/injectedobject\/init(_:)-4awwf"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory/InjectedObject":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InjectedObject"}],"abstract":[{"type":"text","text":"Immediate injection property wrapper for SwiftUI ObservableObjects."}],"url":"\/documentation\/factory\/injectedobject","identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject","title":"InjectedObject","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObject"}]},"doc://Factory/documentation/Factory/InjectedObject/init(_:)-4awwf":{"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"init(_:)","url":"\/documentation\/factory\/injectedobject\/init(_:)-4awwf","identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}]},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"}}}