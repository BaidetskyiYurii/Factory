{"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/factorymodifying-implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"},"metadata":{"roleHeading":"API Collection","title":"FactoryModifying Implementations","role":"collectionGroup","modules":[{"name":"Factory"}]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/graph","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique"],"generated":true},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/once()","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/timeToLive(_:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://Factory/documentation/Factory/ParameterFactory/reset(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/reset(_:)","url":"\/documentation\/factory\/parameterfactory\/reset(_:)","title":"reset(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/context(_:factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/context(_:factory:)","kind":"symbol","title":"context(_:factory:)","url":"\/documentation\/factory\/parameterfactory\/context(_:factory:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FactoryContextType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A11ContextTypeO"},{"kind":"text","text":"..., "},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Registers a factory closure to be used only when running in a specific context.","type":"text"}],"role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/decorator(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","url":"\/documentation\/factory\/parameterfactory\/decorator(_:)","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for further examination or manipulation."}],"title":"decorator(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/onArg(_:factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArg(_:factory:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onArg"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Factory builder shortcut for context(.arg(“test”) { .. }","type":"text"}],"title":"onArg(_:factory:)","kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/onarg(_:factory:)","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"title":"singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory\/singleton"},"doc://Factory/documentation/Factory/Scope":{"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"code":"Singleton","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"Scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/onDebug(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDebug(factory:)","url":"\/documentation\/factory\/parameterfactory\/ondebug(factory:)","abstract":[{"text":"Factory builder shortcut for context(.debug) { .. }","type":"text"}],"title":"onDebug(factory:)","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDebug"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/graph":{"type":"topic","title":"graph","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/graph","kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/graph"},"doc://Factory/documentation/Factory/ParameterFactory/timeToLive(_:)":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/timeToLive(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeToLive"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"timeToLive(_:)","abstract":[{"text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cached item will be discarded and a new instance created."}],"url":"\/documentation\/factory\/parameterfactory\/timetolive(_:)","role":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class"},"doc://Factory/documentation/Factory/ParameterFactory/onSimulator(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onSimulator(factory:)","url":"\/documentation\/factory\/parameterfactory\/onsimulator(factory:)","abstract":[{"type":"text","text":"Factory builder shortcut for context(.simulator) { .. }"}],"title":"onSimulator(factory:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onSimulator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/once()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"once"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"once()","abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}],"role":"symbol","kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/once()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/once()"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"title":"Scope.Shared","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"kind":"identifier","text":"Shared"}]},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}],"abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"title":"Scope.Graph","navigatorTitle":[{"text":"Graph","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factory\/scope\/graph-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/unique":{"title":"unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/unique","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory/ParameterFactory/shared":{"url":"\/documentation\/factory\/parameterfactory\/shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","kind":"symbol","type":"topic","title":"shared","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true},{"type":"text","text":"."}]},"doc://Factory/documentation/Factory/ParameterFactory/onPreview(factory:)":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/parameterfactory\/onpreview(factory:)","title":"onPreview(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onPreview(factory:)","abstract":[{"type":"text","text":"Factory builder shortcut for context(.preview) { .. }"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onPreview"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/ParameterFactory/onArgs(_:factory:)":{"title":"onArgs(_:factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArgs(_:factory:)","role":"symbol","kind":"symbol","abstract":[{"text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }","type":"text"}],"url":"\/documentation\/factory\/parameterfactory\/onargs(_:factory:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onArgs","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/ParameterFactory/cached":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","url":"\/documentation\/factory\/parameterfactory\/cached","title":"cached","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/scope(_:)":{"kind":"symbol","abstract":[{"text":"Defines a dependency scope for this Factory. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"scope(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory\/scope(_:)"},"doc://Factory/documentation/Factory/ParameterFactory/onDevice(factory:)":{"role":"symbol","type":"topic","title":"onDevice(factory:)","url":"\/documentation\/factory\/parameterfactory\/ondevice(factory:)","abstract":[{"text":"Factory builder shortcut for context(.device) { .. }","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDevice(factory:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onDevice","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","type":"topic","title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}]},"doc://Factory/documentation/Factory/ParameterFactory/onTest(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onTest(factory:)","url":"\/documentation\/factory\/parameterfactory\/ontest(factory:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onTest"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"onTest(factory:)","abstract":[{"text":"Factory builder shortcut for context(.test) { .. }","type":"text"}],"kind":"symbol"}}}