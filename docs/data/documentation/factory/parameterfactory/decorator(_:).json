{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decorator"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"text":"This includes previously created items that may have been cached by a scope.","type":"text"}],"type":"paragraph"},{"code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact."}]}]}],"sections":[],"metadata":{"roleHeading":"Instance Method","title":"decorator(_:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"Factory"}],"externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzYbcF::SYNTHESIZED::s:7Factory09ParameterA0V","extendedModule":"Factory"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/parameterfactory\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"inlineContent":[{"text":"always","type":"text"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://Factory/documentation/Factory/FactoryModifying/T":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","role":"symbol","type":"topic","title":"T","url":"\/documentation\/factory\/factorymodifying\/t","required":true,"abstract":[{"text":"The return type of the Factoryâ€™s dependency.","type":"text"}],"kind":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}]},"doc://Factory/documentation/Factory/ParameterFactory":{"title":"ParameterFactory","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factory\/parameterfactory","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}]},"doc://Factory/documentation/Factory/ParameterFactory/decorator(_:)":{"url":"\/documentation\/factory\/parameterfactory\/decorator(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","kind":"symbol","title":"decorator(_:)","abstract":[{"text":"Adds a factory specific decorator. The decorator will be ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/FactoryModifying-Implementations":{"url":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations","type":"topic","abstract":[],"title":"FactoryModifying Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"}}}