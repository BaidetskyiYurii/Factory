{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"]]},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","interfaceLanguage":"swift"},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"syntax":"swift","type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}]}],"metadata":{"modules":[{"name":"Factory"}],"roleHeading":"Instance Property","extendedModule":"Factory","title":"singleton","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:7Factory09ParameterA0V"},"references":{"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"title":"singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory\/singleton"},"doc://Factory/documentation/Factory/ParameterFactory/FactoryModifying-Implementations":{"kind":"article","abstract":[],"title":"FactoryModifying Implementations","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory"}}}