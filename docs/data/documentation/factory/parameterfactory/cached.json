{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/cached"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Instance Property","modules":[{"name":"Factory"}],"symbolKind":"property","role":"symbol","extendedModule":"Factory","title":"cached","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp::SYNTHESIZED::s:7Factory09ParameterA0V"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations"]]},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"references":{"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","type":"topic","title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}]},"doc://Factory/documentation/Factory/ParameterFactory":{"kind":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","role":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/cached":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","url":"\/documentation\/factory\/parameterfactory\/cached","title":"cached","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/ParameterFactory/FactoryModifying-Implementations":{"kind":"article","abstract":[],"title":"FactoryModifying Implementations","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations"}}}