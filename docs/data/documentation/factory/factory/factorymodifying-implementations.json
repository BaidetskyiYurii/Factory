{"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory\/cached","doc:\/\/Factory\/documentation\/Factory\/Factory\/graph","doc:\/\/Factory\/documentation\/Factory\/Factory\/shared","doc:\/\/Factory\/documentation\/Factory\/Factory\/singleton","doc:\/\/Factory\/documentation\/Factory\/Factory\/unique"],"generated":true},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/once()","doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/timeToLive(_:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/factorymodifying-implementations"]}],"metadata":{"roleHeading":"API Collection","title":"FactoryModifying Implementations","role":"collectionGroup","modules":[{"name":"Factory"}]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","interfaceLanguage":"swift"},"kind":"article","references":{"doc://Factory/documentation/Factory/Factory/shared":{"url":"\/documentation\/factory\/factory\/shared","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"text":".","type":"text"}],"title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/Factory/unique":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"title":"unique","url":"\/documentation\/factory\/factory\/unique","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/cached":{"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"cached","url":"\/documentation\/factory\/factory\/cached","role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/cached"},"doc://Factory/documentation/Factory/Factory/decorator(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" be called with the resolved dependency"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"title":"decorator(_:)","url":"\/documentation\/factory\/factory\/decorator(_:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/timeToLive(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeToLive"},{"text":"(","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cached item will be discarded and a new instance created."}],"title":"timeToLive(_:)","url":"\/documentation\/factory\/factory\/timetolive(_:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/timeToLive(_:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onSimulator(factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onSimulator"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Factory builder shortcut for context(.simulator) { .. }"}],"url":"\/documentation\/factory\/factory\/onsimulator(factory:)","kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onSimulator(factory:)","role":"symbol","title":"onSimulator(factory:)"},"doc://Factory/documentation/Factory/Factory/context(_:factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FactoryContextType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A11ContextTypeO"},{"text":"..., ","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Registers a factory closure to be used only when running in a specific context."}],"title":"context(_:factory:)","url":"\/documentation\/factory\/factory\/context(_:factory:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/context(_:factory:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/scope(_:)":{"url":"\/documentation\/factory\/factory\/scope(_:)","type":"topic","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/scope(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"scope(_:)"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onDebug(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onDebug(factory:)","role":"symbol","type":"topic","title":"onDebug(factory:)","url":"\/documentation\/factory\/factory\/ondebug(factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDebug","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Factory builder shortcut for context(.debug) { .. }","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope":{"title":"Scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Factory/documentation/Factory/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","type":"topic","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"title":"Factory","url":"\/documentation\/factory\/factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}],"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onTest(factory:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onTest","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Factory builder shortcut for context(.test) { .. }"}],"title":"onTest(factory:)","url":"\/documentation\/factory\/factory\/ontest(factory:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onTest(factory:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/once()":{"role":"symbol","abstract":[{"text":"Adds ability to mutate Factory on first instantiation only.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"once"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/once()","title":"once()","url":"\/documentation\/factory\/factory\/once()"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/singleton":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"title":"singleton","url":"\/documentation\/factory\/factory\/singleton","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/singleton","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onDevice(factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onDevice","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Factory builder shortcut for context(.device) { .. }","type":"text"}],"title":"onDevice(factory:)","url":"\/documentation\/factory\/factory\/ondevice(factory:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onDevice(factory:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onArg(_:factory:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onArg","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Factory builder shortcut for context(.arg(“test”) { .. }","type":"text"}],"title":"onArg(_:factory:)","url":"\/documentation\/factory\/factory\/onarg(_:factory:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onArg(_:factory:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onPreview(factory:)":{"url":"\/documentation\/factory\/factory\/onpreview(factory:)","type":"topic","abstract":[{"text":"Factory builder shortcut for context(.preview) { .. }","type":"text"}],"title":"onPreview(factory:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onPreview","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onPreview(factory:)"},"doc://Factory/documentation/Factory/Factory/onArgs(_:factory:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onArgs","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","url":"\/documentation\/factory\/factory\/onargs(_:factory:)","kind":"symbol","abstract":[{"type":"text","text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onArgs(_:factory:)","title":"onArgs(_:factory:)","type":"topic"},"doc://Factory/documentation/Factory/Factory/reset(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"title":"reset(_:)","url":"\/documentation\/factory\/factory\/reset(_:)","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/graph":{"kind":"symbol","title":"graph","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/graph","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","url":"\/documentation\/factory\/factory\/graph"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"url":"\/documentation\/factory\/scope\/graph-swift.class","type":"topic","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"title":"Scope.Graph","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"}}}