{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"container","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","text":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#function"},{"kind":"text","text":", "},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"factory"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The bound container that manages registrations and scope caching for this Factory. The scope helper functions bind the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"current container as well defining the scope."}],"type":"paragraph"}],"name":"container"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Hidden value used to differentiate different instances of the same type in the same container.","type":"text"}]}],"name":"key"},{"name":"factory","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A factory closure that produces an object of the desired type when required."}]}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"kind":"symbol","abstract":[{"type":"text","text":"Public initializer creates a Factory capable of managing dependencies of the desired type."}],"sections":[],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", () -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"externalID":"s:7FactoryAAV_3key_AByxGAA16ManagedContainer_p_s12StaticStringVxyYbctcfc","roleHeading":"Initializer","title":"init(_:key:_:)","symbolKind":"init","role":"symbol","modules":[{"name":"Factory"}]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/init(_:key:_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/init(_:key:_:)"]}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","type":"topic","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"title":"Factory","url":"\/documentation\/factory\/factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}],"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/init(_:key:_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","text":"ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", () -> "},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","title":"init(_:key:_:)","url":"\/documentation\/factory\/factory\/init(_:key:_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/init(_:key:_:)","role":"symbol","abstract":[{"text":"Public initializer creates a Factory capable of managing dependencies of the desired type.","type":"text"}]},"doc://Factory/documentation/Factory/ManagedContainer":{"url":"\/documentation\/factory\/managedcontainer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","title":"ManagedContainer"}}}