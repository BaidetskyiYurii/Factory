{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"type":"text","text":"Factory will evaluate the new closure and return an instance of the newly registered object instead."}]},{"inlineContent":[{"type":"text","text":"Here’s an example of registering a new Factory closure."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["container.service.register {","    SomeService()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"text":" ","type":"text"},{"text":"used to provide mocks and testing doubles.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes our of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its registrations.","type":"text"}]},{"inlineContent":[{"text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"factory: A new factory closure that produces an object of the desired type when needed."},{"type":"text","text":" "},{"type":"text","text":"Allows updating registered factory and scope."}]}]}]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": () -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","title":"register(factory:)","modules":[{"name":"Factory"}],"externalID":"s:7FactoryAAV8register7factoryAByxGxyYbc_tF","symbolKind":"method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/factory\/factory\/register(factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"kind":"symbol","references":{"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/Factory/register(factory:)":{"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","title":"register(factory:)","url":"\/documentation\/factory\/factory\/register(factory:)","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/Factory":{"role":"symbol","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factory\/factory","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}],"title":"Factory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory"}}}