{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () -> "},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"type":"text","text":"Factory will evaluate the new closure and return an instance of the newly registered object instead."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s an example of registering a new Factory closure."}]},{"type":"codeListing","code":["container.service.register {","    SomeService()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"text":" ","type":"text"},{"type":"text","text":"used to provide mocks and testing doubles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Registration “overrides” are stored in the associated container. If the container ever goes our of scope, so"},{"type":"text","text":" "},{"text":"will all of its registrations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"factory: A new factory closure that produces an object of the desired type when needed."},{"type":"text","text":" "},{"text":"Allows updating registered factory and scope.","type":"text"}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/register(factory:)"]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"metadata":{"title":"register(factory:)","role":"symbol","modules":[{"name":"Factory"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"roleHeading":"Instance Method","externalID":"s:7FactoryAAV8register7factoryAByxGxyYbc_tF"},"references":{"doc://Factory/documentation/Factory/Factory/register(factory:)":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/factory\/factory\/register(factory:)","abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","title":"register(factory:)"},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/Factory":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","title":"Factory","url":"\/documentation\/factory\/factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}]}}}