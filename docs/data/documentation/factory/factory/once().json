{"metadata":{"role":"symbol","title":"once()","externalID":"s:7Factory0A9ModifyingPAAE4oncexyF::SYNTHESIZED::s:7FactoryAAV","modules":[{"name":"Factory"}],"extendedModule":"Factory","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"once"},{"kind":"text","text":"() -> "},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"method"},"variants":[{"paths":["\/documentation\/factory\/factory\/once()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"once","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/once()"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://Factory/documentation/Factory/Factory":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","title":"Factory","url":"\/documentation\/factory\/factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/once()":{"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"once","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/factory\/factory\/once()","abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/once()","title":"once()"},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/factory\/factory\/factorymodifying-implementations","type":"topic","title":"FactoryModifying Implementations","kind":"article"}}}