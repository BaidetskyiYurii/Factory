{"metadata":{"roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"reset(_:)","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE5resetyxAA0A12ResetOptionsOF::SYNTHESIZED::s:7FactoryAAV","modules":[{"name":"Factory"}],"extendedModule":"Factory","symbolKind":"method"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"options","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryResetOptions"},{"kind":"text","text":" = .all) -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"options description","type":"text"}]}],"name":"options"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope."}],"variants":[{"paths":["\/documentation\/factory\/factory\/reset(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://Factory/documentation/Factory/Factory/reset(_:)":{"title":"reset(_:)","abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/reset(_:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","type":"topic"},"doc://Factory/documentation/Factory/FactoryResetOptions":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FactoryResetOptions"}],"title":"FactoryResetOptions","abstract":[{"text":"Reset options for Factory’s and Container’s","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/factoryresetoptions","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryResetOptions","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryResetOptions"}]},"doc://Factory/documentation/Factory/Factory":{"role":"symbol","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factory\/factory","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}],"title":"Factory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/Factory/FactoryModifying-Implementations":{"kind":"article","title":"FactoryModifying Implementations","role":"collectionGroup","type":"topic","abstract":[],"url":"\/documentation\/factory\/factory\/factorymodifying-implementations","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"}}}