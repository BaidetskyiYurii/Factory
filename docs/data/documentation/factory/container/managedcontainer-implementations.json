{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Container\/ManagedContainer-Implementations","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Factory"}],"roleHeading":"API Collection","role":"collectionGroup","title":"ManagedContainer Implementations"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Container"]]},"variants":[{"paths":["\/documentation\/factory\/container\/managedcontainer-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"article","topicSections":[{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-33sw2","doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-9b7qn","doc:\/\/Factory\/documentation\/Factory\/Container\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-6682d","doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-7g95","doc:\/\/Factory\/documentation\/Factory\/Container\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/Container\/with(_:)"]}],"references":{"doc://Factory/documentation/Factory/Container/with(_:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"title":"with(_:)","url":"\/documentation\/factory\/container\/with(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/with(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Container/reset(options:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Defines a thread safe access mechanism to reset the container.","type":"text"}],"title":"reset(options:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/reset(options:)","url":"\/documentation\/factory\/container\/reset(options:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}]},"doc://Factory/documentation/Factory/Container/promised(key:)-6682d":{"type":"topic","kind":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution.","type":"text"}],"title":"promised(key:)","url":"\/documentation\/factory\/container\/promised(key:)-6682d","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-6682d","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":") -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}]},"doc://Factory/documentation/Factory/Container/promised(key:)-7g95":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"title":"promised(key:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:)-7g95","url":"\/documentation\/factory\/container\/promised(key:)-7g95","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":") -> "},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}]},"doc://Factory/documentation/Factory/Container/callAsFunction(key:_:)-9b7qn":{"type":"topic","kind":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a properly bound ParameterFactory.","type":"text"}],"title":"callAsFunction(key:_:)","url":"\/documentation\/factory\/container\/callasfunction(key:_:)-9b7qn","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-9b7qn","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"P"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]},"doc://Factory/documentation/Factory/Container":{"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"title":"Container","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"url":"\/documentation\/factory\/container"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/Container/callAsFunction(key:_:)-33sw2":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound Factory."}],"title":"callAsFunction(key:_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/callAsFunction(key:_:)-33sw2","url":"\/documentation\/factory\/container\/callasfunction(key:_:)-33sw2","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://Factory/documentation/Factory/Container/decorator(_:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"title":"decorator(_:)","url":"\/documentation\/factory\/container\/decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/decorator(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"((("},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}]}}}