{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes"]]},"topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"]}],"relationshipsSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"kind":"relationships","identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"metadata":{"symbolKind":"class","role":"symbol","externalID":"s:7Factory5ScopeC","roleHeading":"Class","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"title":"Scope"},"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","seeAlsoSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"title":"Scope Class Definitions","generated":true}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object"},{"type":"text","text":" "},{"type":"text","text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned."}]},{"type":"paragraph","inlineContent":[{"text":"That behavior can vary according to the scope type (e.g. Shared or Graph)","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so"},{"type":"text","text":" "},{"type":"text","text":"will all of its cached references."}]},{"type":"paragraph","inlineContent":[{"text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance","type":"text"},{"type":"text","text":" "},{"type":"text","text":"of the dependency will be created each and every time that factory is resolved."}]},{"inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope"]}],"references":{"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"role":"symbol","kind":"symbol","url":"\/documentation\/factory\/scope\/unique-swift.class","title":"Scope.Unique","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Unique","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","type":"topic","navigatorTitle":[{"text":"Unique","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}]},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","role":"symbol","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/cached-swift.type.property":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Cached","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6CachedC"}],"role":"symbol","kind":"symbol","title":"cached","url":"\/documentation\/factory\/scope\/cached-swift.type.property","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}],"abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"title":"Scope.Graph","type":"topic","url":"\/documentation\/factory\/scope\/graph-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","kind":"symbol","navigatorTitle":[{"text":"Graph","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"title":"singleton","role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.type.property","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","text":"Singleton"}],"abstract":[{"text":"A reference to the default singleton scope manager.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property"},"doc://Factory/documentation/Factory/Scope/unique-swift.type.property":{"title":"unique","role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/unique-swift.type.property","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier","text":"Scope"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC6UniqueC","text":"Unique","kind":"typeIdentifier"}],"abstract":[{"text":"A reference to the default unique scope.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"title":"Scope.Cached","type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/Scopes":{"role":"collectionGroup","url":"\/documentation\/factory\/scopes","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","abstract":[{"text":"Not everything wants to be a Singleton. Learn the power of Scopes.","type":"text"}],"kind":"article","title":"Scopes","type":"topic"},"doc://Factory/documentation/Factory/Scope":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}]},"doc://Factory/documentation/Factory/Scope/shared-swift.type.property":{"type":"topic","kind":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6SharedC","text":"Shared"}],"role":"symbol","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","abstract":[{"text":"A reference to the default shared scope manager.","type":"text"}]},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Factory/documentation/Factory/Scope/graph-swift.type.property":{"abstract":[{"type":"text","text":"A reference to the default graph scope manager."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","url":"\/documentation\/factory\/scope\/graph-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier","text":"Scope"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC5GraphC","kind":"typeIdentifier","text":"Graph"}],"title":"graph","role":"symbol","kind":"symbol"}}}