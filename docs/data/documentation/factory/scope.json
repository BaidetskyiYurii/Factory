{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Scope"},"seeAlsoSections":[{"title":"Scope Class Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes"]]},"relationshipsSections":[{"title":"Inherited By","kind":"relationships","type":"inheritedBy","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"]},{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Factory\/s8SendableP"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope"]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object","type":"text"},{"type":"text","text":" "},{"text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That behavior can vary according to the scope type (e.g. Shared or Graph)"}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"]},{"inlineContent":[{"type":"text","text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so"},{"text":" ","type":"text"},{"text":"will all of its cached references.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance"},{"text":" ","type":"text"},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}]}]}],"sections":[],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"text":" ","type":"text"},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"Factory"}],"title":"Scope","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"symbolKind":"class","role":"symbol","roleHeading":"Class","externalID":"s:7Factory5ScopeC"},"kind":"symbol","topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"]}],"references":{"doc://Factory/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope":{"title":"Scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}]},"doc://Factory/documentation/Factory/Scope/shared-swift.type.property":{"url":"\/documentation\/factory\/scope\/shared-swift.type.property","role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A reference to the default shared scope manager."}],"title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory5ScopeC6SharedC","text":"Shared","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/Scopes":{"title":"Scopes","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/factory\/scopes","abstract":[{"type":"text","text":"Not everything wants to be a Singleton. Learn the power of Scopes."}]},"doc://Factory/documentation/Factory/Scope/unique-swift.type.property":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"kind":"text","text":": "},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6UniqueC","text":"Unique"}],"title":"unique","abstract":[{"type":"text","text":"A reference to the default unique scope."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property","url":"\/documentation\/factory\/scope\/unique-swift.type.property","kind":"symbol","type":"topic"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/cached-swift.type.property":{"url":"\/documentation\/factory\/scope\/cached-swift.type.property","title":"cached","type":"topic","abstract":[{"type":"text","text":"A reference to the default cached scope manager."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier","text":"Scope"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC6CachedC","text":"Cached","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property"},"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"url":"\/documentation\/factory\/scope\/singleton-swift.type.property","type":"topic","title":"singleton","abstract":[{"type":"text","text":"A reference to the default singleton scope manager."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","text":"Singleton"}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"url":"\/documentation\/factory\/scope\/graph-swift.class","type":"topic","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"title":"Scope.Graph","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}],"kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Unique","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Unique"}],"title":"Scope.Unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","url":"\/documentation\/factory\/scope\/unique-swift.class"},"doc://Factory/documentation/Factory/Scope/graph-swift.type.property":{"abstract":[{"text":"A reference to the default graph scope manager.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Graph","preciseIdentifier":"s:7Factory5ScopeC5GraphC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","title":"graph","url":"\/documentation\/factory\/scope\/graph-swift.type.property","type":"topic","kind":"symbol"}}}