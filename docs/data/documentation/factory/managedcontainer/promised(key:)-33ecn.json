{"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#function"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"?>","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"code":["extension Container {","    public var accountLoader: Factory<Int, AccountLoading?> { _ in promised() }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"When run in debug mode and the application attempts to resolve an unregistered accountLoader, ","type":"text"},{"type":"codeVoice","code":"promised()"},{"text":" will trigger a fatalError to","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"inform you of the mistake. But in a released application, "},{"type":"codeVoice","code":"promised()"},{"text":" simply returns nil and your application can continue on.","type":"text"}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"metadata":{"roleHeading":"Instance Method","extendedModule":"Factory","modules":[{"name":"Factory"}],"symbolKind":"method","externalID":"s:7Factory16ManagedContainerPAAE8promised3keyAA09ParameterA0Vyqd__qd_0_SgGs12StaticStringV_tr0_lF","title":"promised(key:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"role":"symbol"},"sections":[],"variants":[{"paths":["\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://Factory/documentation/Factory/ManagedContainer":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","role":"symbol","title":"ManagedContainer","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:)-33ecn":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"title":"promised(key:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:)-33ecn","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier","text":"ParameterFactory"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":"?>","kind":"text"}],"role":"symbol","url":"\/documentation\/factory\/managedcontainer\/promised(key:)-33ecn"},"doc://Factory/documentation/Factory/ParameterFactory":{"url":"\/documentation\/factory\/parameterfactory","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","title":"ParameterFactory","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"}}}