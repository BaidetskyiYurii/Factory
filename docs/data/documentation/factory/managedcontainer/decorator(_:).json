{"abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Factory"}],"title":"decorator(_:)","extendedModule":"Factory","externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF","symbolKind":"method"},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"kind":"text","text":": (("},{"kind":"keyword","text":"Any"},{"text":") -> ())?)","kind":"text"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":") -> ())?)"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","kind":"symbol","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"title":"decorator(_:)","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/decorator(_:)"},"doc://Factory/documentation/Factory/ManagedContainer":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"title":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","role":"symbol","type":"topic","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}]},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"}}}