{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"ContainerManager also implements several functions that can be used to reset the container"},{"type":"text","text":" "},{"text":"to a pristine state, as well as push\/pop methods that can save and restore the current state.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Those functions are designed primarily for testing.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"]},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"],"title":"Instance Properties"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"],"title":"Instance Methods"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"relationshipsSections":[{"identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"sections":[],"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"modules":[{"name":"Factory"}],"symbolKind":"class","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerManager"}],"title":"ContainerManager","externalID":"s:7Factory16ContainerManagerC"},"variants":[{"paths":["\/documentation\/factory\/containermanager"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","interfaceLanguage":"swift"},"abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://Factory/documentation/Factory/ContainerManager/defaultScope":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"defaultScope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"text":"?","kind":"text"}],"abstract":[{"text":"Default scope","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","type":"topic","title":"defaultScope","kind":"symbol","url":"\/documentation\/factory\/containermanager\/defaultscope","role":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}],"url":"\/documentation\/factory\/containermanager\/pop()","abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"title":"pop()"},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions"},{"text":")","kind":"text"}],"url":"\/documentation\/factory\/containermanager\/reset(options:)","abstract":[{"type":"text","text":"Resets the Container to its original state, removing all registrations and clearing all scope caches."}],"title":"reset(options:)"},"doc://Factory/documentation/Factory/ContainerManager/push()":{"url":"\/documentation\/factory\/containermanager\/push()","abstract":[{"text":"Test function pushes the current registration and cache states","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"push","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","title":"push()"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/init()":{"url":"\/documentation\/factory\/containermanager\/init()","abstract":[{"type":"text","text":"Public initializer"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"role":"symbol","title":"init()"},"doc://Factory/documentation/Factory/ContainerManager/logger":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"title":"logger","type":"topic","url":"\/documentation\/factory\/containermanager\/logger","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","kind":"symbol","abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}],"role":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/promiseTriggersError":{"url":"\/documentation\/factory\/containermanager\/promisetriggerserror","abstract":[{"text":"Public variable promise behavior","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"promiseTriggersError"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","title":"promiseTriggersError"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"url":"\/documentation\/factory\/containermanager\/dependencychaintestmax","abstract":[{"text":"Public variable exposing dependency chain test maximum","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"dependencyChainTestMax","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"role":"symbol","title":"dependencyChainTestMax"},"doc://Factory/documentation/Factory/ContainerManager":{"title":"ContainerManager","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ContainerManager","kind":"identifier"}],"url":"\/documentation\/factory\/containermanager","navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}]},"doc://Factory/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/ContainerManager/trace":{"kind":"symbol","title":"trace","abstract":[{"type":"text","text":"Public var enabling factory resolution trace statements in debug mode for ALL containers."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace","type":"topic","url":"\/documentation\/factory\/containermanager\/trace","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"trace"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"kind":"symbol","title":"reset(scope:)","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","type":"topic","url":"\/documentation\/factory\/containermanager\/reset(scope:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}]}}}