{"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope"],"title":"Inherits From"},{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Factory\/s8SendableP"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"title":"Scope Class Definitions","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()"]}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"},"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scopes"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/shared-swift.class"]}],"sections":[],"metadata":{"roleHeading":"Class","extendedModule":"Factory","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"symbolKind":"class","title":"Scope.Shared","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"externalID":"s:7Factory5ScopeC6SharedC","role":"symbol","modules":[{"name":"Factory"}]},"references":{"doc://Factory/documentation/Factory/Scopes":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scopes","type":"topic","title":"Scopes","abstract":[{"text":"Not everything wants to be a Singleton. Learn the power of Scopes.","type":"text"}],"url":"\/documentation\/factory\/scopes","kind":"article","role":"collectionGroup"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}],"abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"title":"Scope.Graph","navigatorTitle":[{"text":"Graph","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factory\/scope\/graph-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/Scope":{"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"code":"Singleton","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","title":"Scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"topic","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","role":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class/init()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[],"title":"init()","url":"\/documentation\/factory\/scope\/shared-swift.class\/init()","kind":"symbol","role":"symbol"},"doc://Factory/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","type":"topic","title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"title":"Scope.Shared","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"kind":"identifier","text":"Shared"}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Unique","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/unique-swift.class","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","navigatorTitle":[{"text":"Unique","kind":"identifier"}],"title":"Scope.Unique","type":"topic"}}}