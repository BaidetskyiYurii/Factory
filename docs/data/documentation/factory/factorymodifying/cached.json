{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"],"type":"codeListing"}]}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"kind":"symbol","metadata":{"extendedModule":"Factory","title":"cached","roleHeading":"Instance Property","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Factory"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/cached"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying":{"title":"FactoryModifying","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/cached":{"title":"cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/cached","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class"},{"type":"text","text":"."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"kind":"symbol"}}}