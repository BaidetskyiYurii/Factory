{"metadata":{"roleHeading":"Instance Method","title":"decorator(_:)","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzYbcF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Factory","modules":[{"name":"Factory"}],"symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factorymodifying\/decorator(_:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This includes previously created items that may have been cached by a scope.","type":"text"}]},{"code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact.","type":"text"}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"inlineContent":[{"text":"always","type":"text"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"sections":[],"references":{"doc://Factory/documentation/Factory/FactoryModifying":{"title":"FactoryModifying","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FactoryModifying","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/factory\/factorymodifying"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying/decorator(_:)":{"title":"decorator(_:)","kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/decorator(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will be "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" be called with the resolved dependency"},{"text":" ","type":"text"},{"type":"text","text":"for further examination or manipulation."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/FactoryModifying/T":{"required":true,"url":"\/documentation\/factory\/factorymodifying\/t","title":"T","type":"topic","abstract":[{"type":"text","text":"The return type of the Factory’s dependency."}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"kind":"identifier","text":"T"}],"role":"symbol"}}}