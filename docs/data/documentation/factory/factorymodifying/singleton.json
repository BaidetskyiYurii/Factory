{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"metadata":{"externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp","extendedModule":"Factory","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","symbolKind":"property","title":"singleton","roleHeading":"Instance Property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"type":"codeListing","syntax":"swift"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/factorymodifying\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/FactoryModifying/singleton":{"title":"singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factorymodifying\/singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying":{"title":"FactoryModifying","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"title":"Scope.Singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"}}}