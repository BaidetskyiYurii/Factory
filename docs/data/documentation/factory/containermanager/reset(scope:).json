{"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}],"role":"symbol","extendedModule":"Factory","symbolKind":"method","title":"reset(scope:)","roleHeading":"Instance Method","modules":[{"name":"Factory"}],"externalID":"s:7Factory16ContainerManagerC5reset5scopeyAA5ScopeC_tF"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"typeIdentifier","text":"Scope"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"paths":["\/documentation\/factory\/containermanager\/reset(scope:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ContainerManager"]]},"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Factory/documentation/Factory/Scope":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"title":"reset(scope:)","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/factory\/containermanager\/reset(scope:)"},"doc://Factory/documentation/Factory/ContainerManager":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"type":"topic","title":"ContainerManager","url":"\/documentation\/factory\/containermanager","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}]}}}