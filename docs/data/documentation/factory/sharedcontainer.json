{"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/s8SendableP"],"title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}],"externalID":"s:7Factory15SharedContainerP","roleHeading":"Protocol","title":"SharedContainer","symbolKind":"protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"modules":[{"name":"Factory"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"],"title":"Type Properties"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","text":"ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"}],"platforms":["macOS"]}]},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution."}]},{"type":"codeListing","code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The default ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","type":"reference"},{"type":"text","text":" provided is a SharedContainer. It can be used in both roles as needed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers"},{"text":" for more information.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factory\/sharedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/SharedContainer/shared":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","url":"\/documentation\/factory\/sharedcontainer\/shared","required":true,"role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/Containers":{"kind":"article","type":"topic","title":"Containers","url":"\/documentation\/factory\/containers","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","role":"article","abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}]},"doc://Factory/documentation/Factory/SharedContainer":{"url":"\/documentation\/factory\/sharedcontainer","type":"topic","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}]},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Container":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","type":"topic","title":"Container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"url":"\/documentation\/factory\/container","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"navigatorTitle":[{"text":"Container","kind":"identifier"}]},"doc://Factory/documentation/Factory/ManagedContainer":{"url":"\/documentation\/factory\/managedcontainer","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ManagedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","title":"ManagedContainer"},"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"}}}