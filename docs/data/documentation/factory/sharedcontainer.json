{"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From"},{"title":"Conforming Types","type":"conformingTypes","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"],"kind":"relationships"}],"metadata":{"roleHeading":"Protocol","title":"SharedContainer","externalID":"s:7Factory15SharedContainerP","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"modules":[{"name":"Factory"}],"symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"role":"symbol"},"sections":[],"variants":[{"paths":["\/documentation\/factory\/sharedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Type Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:7Factory16ManagedContainerP","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","kind":"typeIdentifier","text":"ManagedContainer"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},{"type":"text","text":" provided is a SharedContainer. It can be used in both roles as needed."}]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","isActive":true,"type":"reference"},{"type":"text","text":" for more information."}]}]}],"references":{"doc://Factory/documentation/Factory/Container":{"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"title":"Container","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"url":"\/documentation\/factory\/container"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"kind":"symbol","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","title":"shared","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/sharedcontainer\/shared","required":true,"role":"symbol"},"doc://Factory/documentation/Factory/SharedContainer":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/sharedcontainer","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}]},"doc://Factory/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"},"doc://Factory/documentation/Factory/Containers":{"kind":"article","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","title":"Containers","type":"topic","url":"\/documentation\/factory\/containers","role":"article"},"doc://Factory/documentation/Factory/ManagedContainer":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"title":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","role":"symbol","type":"topic","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}]}}}