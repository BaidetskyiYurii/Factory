{"sections":[],"metadata":{"role":"symbol","symbolKind":"property","title":"shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Factory"}],"roleHeading":"Type Property","required":true,"externalID":"s:7Factory15SharedContainerP6sharedxvpZ"},"abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/sharedcontainer\/shared"]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This container is used by the various @Injected property wrappers to resolve the keyPath to a given Factory. Care should be taken in","type":"text"},{"type":"text","text":" "},{"type":"text","text":"mixed environments where you’re passing container references AND using the @Injected property wrappers."}]},{"type":"paragraph","inlineContent":[{"text":"Note this should be defined as a ‘let’ variable, not ‘var’. Using ‘static var’ will cause Swift to issue concurrency warnings in the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"future whenever the container is accessed."}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Factory/documentation/Factory/SharedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","role":"symbol","title":"SharedContainer","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/sharedcontainer","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","role":"symbol","title":"shared","abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/sharedcontainer\/shared","type":"topic","required":true,"kind":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"}}}