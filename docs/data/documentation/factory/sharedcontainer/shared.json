{"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"]]},"abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/sharedcontainer\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"required":true,"roleHeading":"Type Property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","title":"shared","role":"symbol","modules":[{"name":"Factory"}],"externalID":"s:7Factory15SharedContainerP6sharedxvpZ"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This container is used by the various @Injected property wrappers to resolve the keyPath to a given Factory. Care should be taken in","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"mixed environments where you’re passing container references AND using the @Injected property wrappers."}]},{"inlineContent":[{"type":"text","text":"Note this should be defined as a ‘let’ variable, not ‘var’. Using ‘static var’ will cause Swift to issue concurrency warnings in the"},{"type":"text","text":" "},{"text":"future whenever the container is accessed.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://Factory/documentation/Factory/SharedContainer":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/factory\/sharedcontainer","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/SharedContainer/shared":{"kind":"symbol","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","title":"shared","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/sharedcontainer\/shared","required":true,"role":"symbol"},"doc://Factory/documentation/Factory":{"kind":"symbol","title":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection","type":"topic"}}}