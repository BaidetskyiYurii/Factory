{"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","interfaceLanguage":"swift"},"abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This container is used by the various @Injected property wrappers to resolve the keyPath to a given Factory. Care should be taken in"},{"type":"text","text":" "},{"type":"text","text":"mixed environments where you’re passing container references AND using the @Injected property wrappers."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note this should be defined as a ‘let’ variable, not ‘var’. Using ‘static var’ will cause Swift to issue concurrency warnings in the"},{"type":"text","text":" "},{"text":"future whenever the container is accessed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","modules":[{"name":"Factory"}],"required":true,"symbolKind":"property","role":"symbol","roleHeading":"Type Property","externalID":"s:7Factory15SharedContainerP6sharedxvpZ"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/sharedcontainer\/shared"]}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection","identifier":"doc:\/\/Factory\/documentation\/Factory","title":"Factory","url":"\/documentation\/factory","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/SharedContainer":{"url":"\/documentation\/factory\/sharedcontainer","type":"topic","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/SharedContainer/shared":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","url":"\/documentation\/factory\/sharedcontainer\/shared","required":true,"role":"symbol","type":"topic"}}}