{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"variants":[{"paths":["\/documentation\/factory\/factorymodifying"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}]}],"kind":"declarations"}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/P","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T"],"title":"Associated Types"},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/graph","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/registration","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/unique"]},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/once()","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/timeToLive(_:)"]}],"kind":"symbol","metadata":{"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"modules":[{"name":"Factory"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"title":"FactoryModifying","symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","externalID":"s:7Factory0A9ModifyingP"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"type":"conformingTypes","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"],"kind":"relationships","title":"Conforming Types"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","interfaceLanguage":"swift"},"abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"references":{"doc://Factory/documentation/Factory/FactoryModifying/onTest(factory:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onTest"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onTest(factory:)","title":"onTest(factory:)","kind":"symbol","abstract":[{"text":"Factory builder shortcut for context(.test) { .. }","type":"text"}],"url":"\/documentation\/factory\/factorymodifying\/ontest(factory:)","type":"topic"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","role":"symbol","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/reset(_:)":{"role":"symbol","type":"topic","kind":"symbol","title":"reset(_:)","abstract":[{"type":"text","text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/reset(_:)"},"doc://Factory/documentation/Factory/FactoryModifying/onPreview(factory:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onPreview","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","kind":"symbol","title":"onPreview(factory:)","url":"\/documentation\/factory\/factorymodifying\/onpreview(factory:)","abstract":[{"text":"Factory builder shortcut for context(.preview) { .. }","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onPreview(factory:)"},"doc://Factory/documentation/Factory/FactoryModifying/singleton":{"type":"topic","url":"\/documentation\/factory\/factorymodifying\/singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","title":"singleton","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onDevice(factory:)":{"type":"topic","title":"onDevice(factory:)","url":"\/documentation\/factory\/factorymodifying\/ondevice(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDevice(factory:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onDevice","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Factory builder shortcut for context(.device) { .. }"}]},"doc://Factory/documentation/Factory/FactoryModifying":{"title":"FactoryModifying","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","role":"symbol","abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/timeToLive(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/timeToLive(_:)","kind":"symbol","role":"symbol","type":"topic","title":"timeToLive(_:)","url":"\/documentation\/factory\/factorymodifying\/timetolive(_:)","abstract":[{"text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the","type":"text"},{"type":"text","text":" "},{"type":"text","text":"cached item will be discarded and a new instance created."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"timeToLive","kind":"identifier"},{"kind":"text","text":"("},{"text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/FactoryModifying/registration":{"url":"\/documentation\/factory\/factorymodifying\/registration","kind":"symbol","required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"registration"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory0A12RegistrationV","kind":"typeIdentifier","text":"FactoryRegistration"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":">"}],"title":"registration","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Internal information that describes this Factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/registration"},"doc://Factory/documentation/Factory/Factory":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","title":"Factory","url":"\/documentation\/factory\/factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}]},"doc://Factory/documentation/Factory/FactoryModifying/decorator(_:)":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Adds a factory specific decorator. The decorator will be ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"url":"\/documentation\/factory\/factorymodifying\/decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","title":"decorator(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/FactoryModifying/onArgs(_:factory:)":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArgs(_:factory:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onArgs","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/onargs(_:factory:)","kind":"symbol","title":"onArgs(_:factory:)","abstract":[{"text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }","type":"text"}],"type":"topic"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}],"abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"title":"Scope.Graph","type":"topic","url":"\/documentation\/factory\/scope\/graph-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","kind":"symbol","navigatorTitle":[{"text":"Graph","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"title":"Scope.Cached","type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/FactoryModifying/graph":{"role":"symbol","title":"graph","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/graph","url":"\/documentation\/factory\/factorymodifying\/graph","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","type":"reference"},{"type":"text","text":"."}],"kind":"symbol","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying/P":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/P","title":"P","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The parameter type of the Factory, if any. Will be "},{"type":"codeVoice","code":"Void"},{"text":" on the standard Factory.","type":"text"}],"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"identifier"}],"required":true,"url":"\/documentation\/factory\/factorymodifying\/p"},"doc://Factory/documentation/Factory/FactoryModifying/context(_:factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/context(_:factory:)","url":"\/documentation\/factory\/factorymodifying\/context(_:factory:)","abstract":[{"text":"Registers a factory closure to be used only when running in a specific context.","type":"text"}],"role":"symbol","title":"context(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"context"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A11ContextTypeO","text":"FactoryContextType"},{"text":"..., ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onArg(_:factory:)":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArg(_:factory:)","title":"onArg(_:factory:)","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.arg(“test”) { .. }"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onArg","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/onarg(_:factory:)"},"doc://Factory/documentation/Factory/FactoryModifying/onDebug(factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onDebug"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.debug) { .. }"}],"url":"\/documentation\/factory\/factorymodifying\/ondebug(factory:)","title":"onDebug(factory:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDebug(factory:)"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}]},"doc://Factory/documentation/Factory/FactoryModifying/once()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"once","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/factory\/factorymodifying\/once()","title":"once()","kind":"symbol","abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/once()"},"doc://Factory/documentation/Factory/Scope":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}]},"doc://Factory/documentation/Factory/FactoryModifying/unique":{"abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"reference","isActive":true},{"type":"text","text":"."}],"title":"unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/unique","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/factory\/factorymodifying\/unique"},"doc://Factory/documentation/Factory/FactoryModifying/T":{"fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"T","kind":"identifier"}],"required":true,"type":"topic","title":"T","abstract":[{"text":"The return type of the Factory’s dependency.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/t","role":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onSimulator(factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onSimulator","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"onSimulator(factory:)","abstract":[{"text":"Factory builder shortcut for context(.simulator) { .. }","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onSimulator(factory:)","kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/onsimulator(factory:)","role":"symbol"},"doc://Factory/documentation/Factory":{"role":"collection","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory","title":"Factory","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/shared":{"title":"shared","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","url":"\/documentation\/factory\/factorymodifying\/shared","role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/scope(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/scope(_:)","role":"symbol","url":"\/documentation\/factory\/factorymodifying\/scope(_:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"kind":"text","text":"("},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"scope(_:)","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"text":".","type":"text"}]},"doc://Factory/documentation/Factory/ParameterFactory":{"url":"\/documentation\/factory\/parameterfactory","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","title":"ParameterFactory","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}]},"doc://Factory/documentation/Factory/FactoryModifying/cached":{"type":"topic","title":"cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/cached","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"text":".","type":"text"}],"kind":"symbol","role":"symbol"}}}